[core]
  whitespace   = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  editor       = vim
  excludesfile = ~/.gitignore_global
[push]
  default = simple
[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local   = yellow
  remote  = green
[color "diff"]
  meta       = yellow bold
  frag       = magenta bold
  old        = red bold
  new        = green bold
  whitespace = red reverse
[color "status"]
  added     = yellow
  changed   = green
  untracked = cyan
[alias]
  aa                 = add .
  co                 = checkout
  br                 = branch
  ci                 = commit
  st                 = status
  df                 = diff
  dc                 = diff --cached
  lg                 = log -p
  lol                = log --graph --decorate --pretty=oneline --abbrev-commit
  lola               = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ls                 = ls-files
  ign                = ls-files -o -i --exclude-standard
  lgb                = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  unstage            = reset HEAD --
  last               = log -1 HEAD
  oops               = commit --amend
  pt                 = "!git push && git push --tags"
  fix                = "!git add . && git commit --amend --no-edit"
  rmdf               = "!git rm $(git ls-files --deleted)"
  export             = "!git clone --depth 1 $1 && rm -rf \"$(basename $1 .git)/.git\" -"
  branches           = branch -avv
  wip                = "!git add . && git commit -m 'WIP'"
  rebase-from-master = "!git co master && git pull && git co - && git rebase master"
  rewrite-history    = "!git rebase -i $(git merge-base master HEAD)"
  finalise           = "!git rebase-from-master && git rewrite-history"
  cleanup            = "!git remote prune origin && git repack && git gc"
  lazy               = "!git add . && git commit -m 'Some updates.' && git push"
[branch]
  autosetuprebase = always
[github]
  user = kud
[fetch]
  prune = true
[include]
  path = .gitconfig_local
